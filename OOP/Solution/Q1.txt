#include<iostream>
#include<cstring>
using namespace std;


class Media
{
protected:
	char* title;
public:
	Media() {
		title = nullptr;
	}
	Media(char *name) {

		title = new char[strlen(name) + 1];
		strcpy(title, name);

	}
	virtual void display() = 0;
	virtual ~Media() {
		if (title != nullptr)
			delete[]title;
	}
};


class Book : public Media
{
	char* authorname;
	char* ISBN;
public:
	Book() {
		authorname = nullptr;
		ISBN = nullptr;
	}
	Book(char* name, char *i, char *t) :Media(t)
	{
		authorname = new char[strlen(name) + 1];
		strcpy(authorname, name);
		cout << authorname << endl;
		ISBN = new char[strlen(i) + 1];
		strcpy(ISBN, i);
	}
	void display() {
		cout << "Author Name: " << authorname << endl;
		cout << "ISBN: " << ISBN << endl;
	}
	~Book() {
		if (authorname != nullptr)
			delete[]authorname;
		if (ISBN != nullptr)
			delete[]ISBN;
	}
};


class Magzine : public Media
{
	char* monthname;
	int year;
public:
	Magzine() {
		monthname = nullptr;
		year = 0;
	}
	Magzine(char*month, int y, char*t) :Media(t)
	{
		monthname = new char[strlen(month) + 1];
		strcpy(monthname, month);
		year = y;
	}

	void display() {
		cout << "Month Name: " << monthname << endl;
		cout << "Year: " << year << endl;
	}
	~Magzine() {
		if (monthname != nullptr)
			delete[]monthname;
	}
};


class CD :public Media
{
	int capacity;
public:
	CD() {
		capacity = 0;
	}
	CD(int c, char *t) :Media(t)
	{
		capacity = c;
	}
	void display() {
		cout << "Capacity: " << capacity;
	}
	~CD() {}
};


class Shelf
{
	Media **ptr;
	int currsize;
	int maxsize;
public:
	Shelf() {
		ptr = nullptr;
		maxsize = 0;
		currsize = 0;
	}

	Shelf(int a) {
		maxsize = a;
		currsize = 0;
		ptr = new Media*[maxsize];
	}

	void insert(Media*p) {
		if (ptr == nullptr) {
			ptr = new Media*[maxsize];
			currsize = 0;
			ptr[currsize] = p;
			currsize++;
		}
		else {
			ptr[currsize] = p;
			currsize++;
		}
	}
	void displaycontents() {
		cout << "Max Size: " << maxsize << endl;
		cout << "Current Size: " << currsize << endl;
		if (currsize == 0) {
			cout << "No Media Exist Yet" << endl;
		}
		else {
			cout << "he" << endl;
			for (int i = 0; i < currsize; i++)
				ptr[i]->display();
		}
	}
	~Shelf() {
		if (ptr != nullptr)
			delete[]ptr;
	}
};


int main() {

	int a = 0;
	cout << "How many media items you want to create'\t'" << endl;
	cin >> a;
	Shelf obj(a);

	do {
		cout << "Press '1' to create a Book \nPress '2' to create a Magzine \nPress '3' to create a CD \n Press'4' to print details of Shelf \nPress '-1' to Exit \n";
		cin >> a;
		if (a == 1)
		{
			char*a = new char[20];
			cout << "Enter Authorname" << endl;
			cin >> a;
			char*b = new char[20];
			cout << "Enter ISBN" << endl;
			cin >> b;
			char*c = new char[20];
			cout << "Enter Title" << endl;
			cin >> c;
			Media *p = new Book(a, b, c);
			obj.insert(p);
		}
		else if (a == 2)
		{
			char*a = new char[20];
			cout << "Enter Monthname" << endl;
			cin >> a;
			int b = 0;
			cout << "Enter Year: " << endl;
			cin >> b;
			char*c = new char[20];
			cout << "Enter Title" << endl;
			cin >> c;
			Magzine obj1(a, b, c);
			Media*p = new Magzine;
			p = &obj1;
			obj.insert(p);
		}
		else if (a == 3)
		{
			int a = 0;
			cout << "Enter capacity" << endl;
			cin >> a;
			char*c = new char[20];
			cout << "Enter Title" << endl;
			cin >> c;
			CD obj1(a, c);
			Media*p = new CD;
			p = &obj1;
			obj.insert(p);
		}
		else
		{
			obj.displaycontents();
		}
	} while (a != -1);
	system("pause");
	return 0;
}